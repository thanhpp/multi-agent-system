{
  "notes": {
    "403": {
      "id": "403",
      "title": "This page has not yet sprouted",
      "vault": {
        "fsPath": "vault"
      },
      "type": "note",
      "desc": "",
      "links": [],
      "anchors": {},
      "fname": "403",
      "updated": 1639936870440,
      "created": 1639936870440,
      "parent": null,
      "children": [],
      "data": {}
    },
    "BnuhRJcMOGIp7ASYnzgfK": {
      "id": "BnuhRJcMOGIp7ASYnzgfK",
      "title": "Multi-Agent System",
      "vault": {
        "fsPath": "vault"
      },
      "type": "note",
      "desc": "",
      "links": [
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C1-Introduction",
          "position": {
            "start": {
              "line": 4,
              "column": 22,
              "offset": 64
            },
            "end": {
              "line": 4,
              "column": 66,
              "offset": 108
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C1-Introduction",
            "anchorHeader": "multi-agent-system,1:#*"
          }
        },
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C2-IntelligentAgents",
          "position": {
            "start": {
              "line": 19,
              "column": 3,
              "offset": 368
            },
            "end": {
              "line": 19,
              "column": 56,
              "offset": 421
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C2-IntelligentAgents",
            "anchorHeader": "environment-properties,1:#*"
          }
        },
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C2-IntelligentAgents",
          "position": {
            "start": {
              "line": 47,
              "column": 3,
              "offset": 1180
            },
            "end": {
              "line": 47,
              "column": 52,
              "offset": 1229
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C2-IntelligentAgents",
            "anchorHeader": "agents-with-states,1:#*"
          }
        }
      ],
      "anchors": {
        "công-nghệ-tác-tử": {
          "type": "header",
          "text": "Công nghệ tác tử",
          "value": "công-nghệ-tác-tử",
          "line": 7,
          "column": 0,
          "depth": 1
        },
        "chapter-1-key-notes": {
          "type": "header",
          "text": "Chapter 1 key notes",
          "value": "chapter-1-key-notes",
          "line": 9,
          "column": 0,
          "depth": 2
        },
        "chapter-2-key-notes": {
          "type": "header",
          "text": "Chapter 2 key notes",
          "value": "chapter-2-key-notes",
          "line": 12,
          "column": 0,
          "depth": 2
        }
      },
      "fname": "root",
      "updated": 1639936813299,
      "created": 1639839870130,
      "parent": null,
      "children": [
        "nyjsbqpAPM3WrEtJJFLmn",
        "FlDl9gx2mBtFM41D123aX"
      ],
      "data": {},
      "contentHash": "b0304be7f6d14cbb53272316c7699e00",
      "custom": {
        "nav_order": 0,
        "permalink": "/"
      }
    },
    "FlDl9gx2mBtFM41D123aX": {
      "id": "FlDl9gx2mBtFM41D123aX",
      "title": "C2-IntelligentAgents",
      "vault": {
        "fsPath": "vault"
      },
      "type": "note",
      "desc": "",
      "links": [
        {
          "from": {
            "fname": "root",
            "vaultName": "vault"
          },
          "type": "backlink",
          "position": {
            "start": {
              "line": 19,
              "column": 3,
              "offset": 368
            },
            "end": {
              "line": 19,
              "column": 56,
              "offset": 421
            },
            "indent": []
          },
          "value": "C2-IntelligentAgents"
        },
        {
          "from": {
            "fname": "root",
            "vaultName": "vault"
          },
          "type": "backlink",
          "position": {
            "start": {
              "line": 47,
              "column": 3,
              "offset": 1180
            },
            "end": {
              "line": 47,
              "column": 52,
              "offset": 1229
            },
            "indent": []
          },
          "value": "C2-IntelligentAgents"
        }
      ],
      "anchors": {
        "autonomy": {
          "type": "header",
          "text": "Autonomy",
          "value": "autonomy",
          "line": 31,
          "column": 0,
          "depth": 1
        },
        "agents-and": {
          "type": "header",
          "text": "Agents and",
          "value": "agents-and",
          "line": 36,
          "column": 0,
          "depth": 1
        },
        "objects": {
          "type": "header",
          "text": "Objects",
          "value": "objects",
          "line": 38,
          "column": 0,
          "depth": 2
        },
        "expert-systems": {
          "type": "header",
          "text": "Expert systems",
          "value": "expert-systems",
          "line": 51,
          "column": 0,
          "depth": 2
        },
        "intelligent-agents-and-ai": {
          "type": "header",
          "text": "Intelligent agents and AI",
          "value": "intelligent-agents-and-ai",
          "line": 55,
          "column": 0,
          "depth": 2
        },
        "environment-properties": {
          "type": "header",
          "text": "Environment Properties",
          "value": "environment-properties",
          "line": 59,
          "column": 0,
          "depth": 1
        },
        "intelligent-agents": {
          "type": "header",
          "text": "Intelligent agents",
          "value": "intelligent-agents",
          "line": 76,
          "column": 0,
          "depth": 1
        },
        "reactive-environment-aware": {
          "type": "header",
          "text": "Reactive (environment aware)",
          "value": "reactive-environment-aware",
          "line": 78,
          "column": 0,
          "depth": 2
        },
        "pro-active": {
          "type": "header",
          "text": "Pro-active",
          "value": "pro-active",
          "line": 84,
          "column": 0,
          "depth": 2
        },
        "social-ability": {
          "type": "header",
          "text": "Social ability",
          "value": "social-ability",
          "line": 88,
          "column": 0,
          "depth": 2
        },
        "other-properties": {
          "type": "header",
          "text": "Other properties",
          "value": "other-properties",
          "line": 96,
          "column": 0,
          "depth": 2
        },
        "intentional-system": {
          "type": "header",
          "text": "Intentional System",
          "value": "intentional-system",
          "line": 103,
          "column": 0,
          "depth": 1
        },
        "abstract-architecture": {
          "type": "header",
          "text": "Abstract architecture",
          "value": "abstract-architecture",
          "line": 108,
          "column": 0,
          "depth": 1
        },
        "environments": {
          "type": "header",
          "text": "Environments",
          "value": "environments",
          "line": 119,
          "column": 0,
          "depth": 2
        },
        "agents": {
          "type": "header",
          "text": "Agents",
          "value": "agents",
          "line": 130,
          "column": 0,
          "depth": 2
        },
        "system": {
          "type": "header",
          "text": "System",
          "value": "system",
          "line": 135,
          "column": 0,
          "depth": 2
        },
        "intelligent-agent-properties": {
          "type": "header",
          "text": "Intelligent agent properties",
          "value": "intelligent-agent-properties",
          "line": 141,
          "column": 0,
          "depth": 1
        },
        "agents-with-states": {
          "type": "header",
          "text": "Agents with States",
          "value": "agents-with-states",
          "line": 149,
          "column": 0,
          "depth": 2
        },
        "task-for-agents": {
          "type": "header",
          "text": "Task for Agents",
          "value": "task-for-agents",
          "line": 164,
          "column": 0,
          "depth": 1
        },
        "utility-functions": {
          "type": "header",
          "text": "Utility functions",
          "value": "utility-functions",
          "line": 166,
          "column": 0,
          "depth": 2
        },
        "optimal-agents": {
          "type": "header",
          "text": "Optimal agents",
          "value": "optimal-agents",
          "line": 187,
          "column": 0,
          "depth": 2
        },
        "task-environment": {
          "type": "header",
          "text": "Task environment",
          "value": "task-environment",
          "line": 197,
          "column": 0,
          "depth": 2
        }
      },
      "fname": "C2-IntelligentAgents",
      "updated": 1639932292448,
      "created": 1639841130136,
      "parent": "BnuhRJcMOGIp7ASYnzgfK",
      "children": [],
      "data": {},
      "contentHash": "43506aa2c72d8918c113985ecf9c8174",
      "custom": {}
    },
    "nyjsbqpAPM3WrEtJJFLmn": {
      "id": "nyjsbqpAPM3WrEtJJFLmn",
      "title": "C1-Introduction",
      "vault": {
        "fsPath": "vault"
      },
      "type": "note",
      "desc": "",
      "links": [
        {
          "from": {
            "fname": "root",
            "vaultName": "vault"
          },
          "type": "backlink",
          "position": {
            "start": {
              "line": 4,
              "column": 22,
              "offset": 64
            },
            "end": {
              "line": 4,
              "column": 66,
              "offset": 108
            },
            "indent": []
          },
          "value": "C1-Introduction"
        }
      ],
      "anchors": {
        "5-trends": {
          "type": "header",
          "text": "5 Trends",
          "value": "5-trends",
          "line": 20,
          "column": 0,
          "depth": 1
        },
        "ubiquity---ubiquitous": {
          "type": "header",
          "text": "Ubiquity - Ubiquitous",
          "value": "ubiquity---ubiquitous",
          "line": 22,
          "column": 0,
          "depth": 2
        },
        "interconnection": {
          "type": "header",
          "text": "Interconnection",
          "value": "interconnection",
          "line": 27,
          "column": 0,
          "depth": 2
        },
        "intelligence": {
          "type": "header",
          "text": "Intelligence",
          "value": "intelligence",
          "line": 31,
          "column": 0,
          "depth": 2
        },
        "delegation": {
          "type": "header",
          "text": "Delegation",
          "value": "delegation",
          "line": 36,
          "column": 0,
          "depth": 2
        },
        "human-oriented": {
          "type": "header",
          "text": "Human oriented",
          "value": "human-oriented",
          "line": 40,
          "column": 0,
          "depth": 2
        },
        "other-trends": {
          "type": "header",
          "text": "Other trends",
          "value": "other-trends",
          "line": 45,
          "column": 0,
          "depth": 2
        },
        "agents": {
          "type": "header",
          "text": "Agents",
          "value": "agents",
          "line": 56,
          "column": 0,
          "depth": 1
        },
        "definition": {
          "type": "header",
          "text": "Definition",
          "value": "definition",
          "line": 58,
          "column": 0,
          "depth": 2
        },
        "multi-agent-system": {
          "type": "header",
          "text": "Multi-Agent System",
          "value": "multi-agent-system",
          "line": 63,
          "column": 0,
          "depth": 2
        },
        "design-problems": {
          "type": "header",
          "text": "Design problems",
          "value": "design-problems",
          "line": 68,
          "column": 0,
          "depth": 2
        }
      },
      "fname": "C1-Introduction",
      "updated": 1639910837614,
      "created": 1639839923457,
      "parent": "BnuhRJcMOGIp7ASYnzgfK",
      "children": [],
      "data": {},
      "contentHash": "c04522abdfe8924eaecff382abd6021d",
      "custom": {}
    }
  },
  "domains": [
    {
      "id": "BnuhRJcMOGIp7ASYnzgfK",
      "title": "Multi-Agent System",
      "vault": {
        "fsPath": "vault"
      },
      "type": "note",
      "desc": "",
      "links": [
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C1-Introduction",
          "position": {
            "start": {
              "line": 4,
              "column": 22,
              "offset": 64
            },
            "end": {
              "line": 4,
              "column": 66,
              "offset": 108
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C1-Introduction",
            "anchorHeader": "multi-agent-system,1:#*"
          }
        },
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C2-IntelligentAgents",
          "position": {
            "start": {
              "line": 19,
              "column": 3,
              "offset": 368
            },
            "end": {
              "line": 19,
              "column": 56,
              "offset": 421
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C2-IntelligentAgents",
            "anchorHeader": "environment-properties,1:#*"
          }
        },
        {
          "type": "ref",
          "from": {
            "fname": "root",
            "id": "BnuhRJcMOGIp7ASYnzgfK",
            "vaultName": "vault"
          },
          "value": "C2-IntelligentAgents",
          "position": {
            "start": {
              "line": 47,
              "column": 3,
              "offset": 1180
            },
            "end": {
              "line": 47,
              "column": 52,
              "offset": 1229
            },
            "indent": []
          },
          "xvault": false,
          "to": {
            "fname": "C2-IntelligentAgents",
            "anchorHeader": "agents-with-states,1:#*"
          }
        }
      ],
      "anchors": {
        "công-nghệ-tác-tử": {
          "type": "header",
          "text": "Công nghệ tác tử",
          "value": "công-nghệ-tác-tử",
          "line": 7,
          "column": 0,
          "depth": 1
        },
        "chapter-1-key-notes": {
          "type": "header",
          "text": "Chapter 1 key notes",
          "value": "chapter-1-key-notes",
          "line": 9,
          "column": 0,
          "depth": 2
        },
        "chapter-2-key-notes": {
          "type": "header",
          "text": "Chapter 2 key notes",
          "value": "chapter-2-key-notes",
          "line": 12,
          "column": 0,
          "depth": 2
        }
      },
      "fname": "root",
      "updated": 1639936813299,
      "created": 1639839870130,
      "parent": null,
      "children": [
        "nyjsbqpAPM3WrEtJJFLmn",
        "FlDl9gx2mBtFM41D123aX"
      ],
      "data": {},
      "contentHash": "b0304be7f6d14cbb53272316c7699e00",
      "custom": {
        "nav_order": 0,
        "permalink": "/"
      },
      "body": "# Công nghệ tác tử\n\n## Chapter 1 key notes\n- Multi-agent system ![[C1-Introduction#multi-agent-system,1:#*]]\n\n## Chapter 2 key notes\n- Agent ~ Autonomous ~ Making decisions\n  - What to perform?\n  - When to perform?\n\n- Agents\n  - Have attitude\n    - Autonomous\n    - Smart - flexible behaviours\n    - Active\n  - Environment awareness\n  - Operate in a limited domain\n\n- ![[C2-IntelligentAgents#environment-properties,1:#*]]\n\n- Intelligent agents\n  - Reactive\n    - Environment aware\n    - Responds to changes\n  - Pro-active (achieving goals)\n  - Social ability (working with others)\n\n- The behaviour of an agent can be predicted using its intention\n\n- Abstract architecture\n  - World has a finite set of states\n  - Agents have a set of possible actions\n  - A run: a sequence of actions and states\n\n- Notion\n  - Environment: states, initial states, transformer function\n  - Agent: runs -> action\n  - A system: \n    - a pair of an agent & an environment\n    - has a set of possible runs\n    - ![](./assets/images/2021-12-19-17-55-51.png) \n\n- Deliberative vs Purely reactive\n  - Deliberative: Making decisions Reactive agent\n    - Always do the **same thing** in the **same state**\n\n- ![[C2-IntelligentAgents#agents-with-states,1:#*]]\n\n- Utility function:\n  - Rewarding agents\n  - Locality: utility for each state, no long term view\n  - Reinforcement: a discount for states later on\n  - Sequential decision making: Utilities depend on the route\n  - Assign utilities for runs: long term view\n  - Expected utility: run utility * run possibility\n\n- Optimal agents\n  - Maximizes the expected utility (on average)\n  - **Bounded**: only those agents that **can be implemented on machine m**\n\n- Task environment\n  - Predicate task specification: succeeds/fails\n  - A pair: environment, task specification\n    - the system's properties\n    - judging criterias\n  - Judging\n    - Pessimistic: all run must be succeeded\n    - Optimistic: a run is succeeded\n  - The probability of success\n    - Sum of all success runs\n  - Types\n    - Achivement: to the goal\n    - Maintenance: not to fail"
    }
  ],
  "noteIndex": {
    "id": "BnuhRJcMOGIp7ASYnzgfK",
    "title": "Multi-Agent System",
    "vault": {
      "fsPath": "vault"
    },
    "type": "note",
    "desc": "",
    "links": [
      {
        "type": "ref",
        "from": {
          "fname": "root",
          "id": "BnuhRJcMOGIp7ASYnzgfK",
          "vaultName": "vault"
        },
        "value": "C1-Introduction",
        "position": {
          "start": {
            "line": 4,
            "column": 22,
            "offset": 64
          },
          "end": {
            "line": 4,
            "column": 66,
            "offset": 108
          },
          "indent": []
        },
        "xvault": false,
        "to": {
          "fname": "C1-Introduction",
          "anchorHeader": "multi-agent-system,1:#*"
        }
      },
      {
        "type": "ref",
        "from": {
          "fname": "root",
          "id": "BnuhRJcMOGIp7ASYnzgfK",
          "vaultName": "vault"
        },
        "value": "C2-IntelligentAgents",
        "position": {
          "start": {
            "line": 19,
            "column": 3,
            "offset": 368
          },
          "end": {
            "line": 19,
            "column": 56,
            "offset": 421
          },
          "indent": []
        },
        "xvault": false,
        "to": {
          "fname": "C2-IntelligentAgents",
          "anchorHeader": "environment-properties,1:#*"
        }
      },
      {
        "type": "ref",
        "from": {
          "fname": "root",
          "id": "BnuhRJcMOGIp7ASYnzgfK",
          "vaultName": "vault"
        },
        "value": "C2-IntelligentAgents",
        "position": {
          "start": {
            "line": 47,
            "column": 3,
            "offset": 1180
          },
          "end": {
            "line": 47,
            "column": 52,
            "offset": 1229
          },
          "indent": []
        },
        "xvault": false,
        "to": {
          "fname": "C2-IntelligentAgents",
          "anchorHeader": "agents-with-states,1:#*"
        }
      }
    ],
    "anchors": {
      "công-nghệ-tác-tử": {
        "type": "header",
        "text": "Công nghệ tác tử",
        "value": "công-nghệ-tác-tử",
        "line": 7,
        "column": 0,
        "depth": 1
      },
      "chapter-1-key-notes": {
        "type": "header",
        "text": "Chapter 1 key notes",
        "value": "chapter-1-key-notes",
        "line": 9,
        "column": 0,
        "depth": 2
      },
      "chapter-2-key-notes": {
        "type": "header",
        "text": "Chapter 2 key notes",
        "value": "chapter-2-key-notes",
        "line": 12,
        "column": 0,
        "depth": 2
      }
    },
    "fname": "root",
    "updated": 1639936813299,
    "created": 1639839870130,
    "parent": null,
    "children": [
      "nyjsbqpAPM3WrEtJJFLmn",
      "FlDl9gx2mBtFM41D123aX"
    ],
    "data": {},
    "contentHash": "b0304be7f6d14cbb53272316c7699e00",
    "custom": {
      "nav_order": 0,
      "permalink": "/"
    },
    "body": "# Công nghệ tác tử\n\n## Chapter 1 key notes\n- Multi-agent system ![[C1-Introduction#multi-agent-system,1:#*]]\n\n## Chapter 2 key notes\n- Agent ~ Autonomous ~ Making decisions\n  - What to perform?\n  - When to perform?\n\n- Agents\n  - Have attitude\n    - Autonomous\n    - Smart - flexible behaviours\n    - Active\n  - Environment awareness\n  - Operate in a limited domain\n\n- ![[C2-IntelligentAgents#environment-properties,1:#*]]\n\n- Intelligent agents\n  - Reactive\n    - Environment aware\n    - Responds to changes\n  - Pro-active (achieving goals)\n  - Social ability (working with others)\n\n- The behaviour of an agent can be predicted using its intention\n\n- Abstract architecture\n  - World has a finite set of states\n  - Agents have a set of possible actions\n  - A run: a sequence of actions and states\n\n- Notion\n  - Environment: states, initial states, transformer function\n  - Agent: runs -> action\n  - A system: \n    - a pair of an agent & an environment\n    - has a set of possible runs\n    - ![](./assets/images/2021-12-19-17-55-51.png) \n\n- Deliberative vs Purely reactive\n  - Deliberative: Making decisions Reactive agent\n    - Always do the **same thing** in the **same state**\n\n- ![[C2-IntelligentAgents#agents-with-states,1:#*]]\n\n- Utility function:\n  - Rewarding agents\n  - Locality: utility for each state, no long term view\n  - Reinforcement: a discount for states later on\n  - Sequential decision making: Utilities depend on the route\n  - Assign utilities for runs: long term view\n  - Expected utility: run utility * run possibility\n\n- Optimal agents\n  - Maximizes the expected utility (on average)\n  - **Bounded**: only those agents that **can be implemented on machine m**\n\n- Task environment\n  - Predicate task specification: succeeds/fails\n  - A pair: environment, task specification\n    - the system's properties\n    - judging criterias\n  - Judging\n    - Pessimistic: all run must be succeeded\n    - Optimistic: a run is succeeded\n  - The probability of success\n    - Sum of all success runs\n  - Types\n    - Achivement: to the goal\n    - Maintenance: not to fail"
  },
  "vaults": [
    {
      "fsPath": "vault"
    }
  ]
}
